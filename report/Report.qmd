---
title: "SBM Report Group 4"
format: html
editor: visual
author: "Bram, Diego, Roland, Thomas, Born√°"
bibliography: references.bib
---

# Report SBM Group 4

## Introduction

Introduce the topic, explain why it is interesting (the research gap and the practical relevance), and formulate the research question.

## Theory and Hypotheses

Explain the state of art in the relevant literature, building towards what is it exactly that you would like to research, consistent with your research question and research gap. If your research design allows for it, develop at most 3 hypotheses based on the theoretical framework you covered: what is it that you expect to see in the data, and why?

### Assumptions

We assume that an entrepreneur does not have any prior experience. We assume that the data is sufficient. For a proxy of successrate, we use the funding as a measure. We assume that the funding is a good proxy for success, because if the funding is not met, the project will not be realized. We assume that the data is not biased, because the data is collected by a third party. We assume that the data is not biased, because the data is collected by a third party. We assume that innovation-related words can also be taken as meaning innovation. By expanding the bucket of words referring to innovation we assure that the majority of the words related to innovation are covered.

We do not assume that employees influence business results, as we are taking a look at Kickstarter projects. And start-up culture is not the same as corporate culture. We do not assume that the number of employees is a good proxy for experience, because the number of employees does not say anything about the experience of the employees [@martin2010].

### Research Question 1

How does experience impact the success rate?

Hypothesis 1: Experience will have a positive impact on whether the idea is successful.

### Research Question 2

How do business ideas change after experience?

Hypothesis 2: subsequent ideas are more innovative than the first idea.

## Methods and Data

Describe the data set that you used, the way you translated the raw data into variables, and the methods you used to analyze the data (e.g., cluster analysis, regression analysis, panel data analysis, time series). Remember that most methods have a number of assumptions that you have to check prior to doing the analyses. Certain assumption violations can be fixed by transforming the focal variables, e.g., the dependent variable, in case of other violations you may need to choose a different method.

```{r}
getwd()
setwd("C:/Users/Borna/Documents/Study/Masters/Master A/Strategy and Business Models/SBM_assignment/report")
getwd()
```

### Data Importing and cleaning, research question 1

```{r}
#inspect the data
#load .rds file named "info" into rstudio


info32 <- readRDS("info.rds")

#create new data with only a few columns of info32 dataset
dataHyp1Sub <- info32[,c('Goal_USD','Pledge_USD','Launched_at','Deadline', 'Creator_nb_projects', 'Creator_nb_backed')]
#dataHyp1Sub

#make a subdataset where deadline is before week 32 in 2019 in unix time
dataHyp1 <- dataHyp1Sub[dataHyp1Sub$Deadline < 1565474400,]
#dataHyp1

#You drop only 1850 records out of 75000

#count the number of rows in dataHyp1sub and dataHyp1
nrow(dataHyp1Sub)
nrow(dataHyp1)


#make a new column with boolean if goal_USD >= Pledge_USD
dataHyp1$Goal_met <- dataHyp1$Goal_USD <= dataHyp1$Pledge_USD
#dataHyp1

#Get from Creator_nb_backed only the number with a regex
dataHyp1$Creator_nb_backed <- as.integer(gsub("[^0-9]", "", dataHyp1$Creator_nb_backed))

#drop na values in dataHyp1
dataHyp1 <- dataHyp1[complete.cases(dataHyp1),]
dataHyp1 <- dataHyp1[,c('Creator_nb_projects', 'Creator_nb_backed', 'Goal_met')]
#dataHyp1


#change Goal_met to binary
dataHyp1$Goal_met <- as.integer(dataHyp1$Goal_met)
#dataHyp1


#Columns as integers
dataHyp1$Creator_nb_backed <- as.integer(dataHyp1$Creator_nb_backed)


#to find an appropriate cutoff point:
table(dataHyp1$Creator_nb_projects)

# we will only use values with at least 50 records, because for normal distribution you need a minimum of 50 values
# So then you have an substantial amount of values


#iterate over the values of the following table: table(dataHyp1$Creator_nb_projects)
quan_table = table(dataHyp1$Creator_nb_projects)

#in quan_table, drop the records where the value is < 50
quan_table <- quan_table[quan_table >= 50]

#clean the data such that only records with over 50 occurences are in there
dataHyp1_2 <- dataHyp1[dataHyp1$Creator_nb_projects %in% names(quan_table),]

#make a table of the values of Creator_nb_projects
table(dataHyp1_2$Creator_nb_projects)



```

### Anova test, research question 1

```{r}
#make a reg model to predict goal_met with Creator_nb_projects and Creator_nb_backed
modelHyp1 <- lm(Goal_met ~ Creator_nb_projects + Creator_nb_backed, data = dataHyp1_2)

#make a logreg model to predict goal_met with Creator_nb_projects and Creator_nb_backed
modelHyp1Log <- glm(Goal_met ~ Creator_nb_projects + Creator_nb_backed, data = dataHyp1_2, family = "binomial")
summary(modelHyp1Log)



#Perform anova test on dataHyp1

Anova_normal <- anova(modelHyp1)
Anova_log <- anova(modelHyp1Log)

stargazer::stargazer(list(Anova_normal, Anova_log), type = 'text')

#table output both Anova_normal and Anova_log inline using stargazer
```

### Some more cleaning and barplot creation

```{r}
#return the values of the loop in a vector
vec_val <- c()
vec_ind <- c()
vec_amount <- c()

for (i in 1:as.integer(max(dataHyp1$Creator_nb_projects))){
  vec_val[i] <- sum(dataHyp1$Goal_met[dataHyp1$Creator_nb_projects == i])/length(dataHyp1$Goal_met[dataHyp1$Creator_nb_projects == i])
  vec_ind[i] <- i
  vec_amount[i] <- length(dataHyp1$Goal_met[dataHyp1$Creator_nb_projects == i])
}

#create a table of vec_val and vec_ind as two columns with headers: index and percentage
tableHyp1 <- data.frame(vec_ind, vec_val, vec_amount)
tableHyp1



```

```{r}
#make a barplot of the column vec_amount
barplot(tableHyp1$vec_amount, names.arg = tableHyp1$vec_ind, xlab = "Number of projects", ylab = "Number of projects of the creator", main = "Number of projects of the creator by number of projects of the creator")

```

```{r}


#drop columns where nan exists
tableHyp1 <- tableHyp1[complete.cases(tableHyp1),]
# tableHyp1


#make a barchart of tableHyp1
barplot(tableHyp1$vec_val, names.arg = tableHyp1$vec_ind, xlab = "Number of projects", ylab = "Percentage of projects that met their goal", main = "Percentage of projects that met their goal by number of projects of the creator")


```

```{r}
#make a barchart of the number of projects per number of projects
barplot(tableHyp1$vec_amount, names.arg = tableHyp1$vec_ind, xlab = "Number of projects", ylab = "Number of projects of the creator", main = "Number of projects of the creator by number of projects of the creator")


```

```{r}

# Convert the data to numeric if needed
dataHyp1$Creator_nb_projects <- as.numeric(dataHyp1$Creator_nb_projects)

# Check if 'tableHyp1$vec_ind' is numeric or convert it
tableHyp1$vec_ind <- as.numeric(tableHyp1$vec_ind)

# Now, create the barplot
barplot(dataHyp1$Creator_nb_projects, names.arg = tableHyp1$vec_ind, xlab = "x", ylab = "y", main = "title")

#this code raises an error. 


```

### Data Importing and cleaning, research question 2

First let us describe the data necessary for the second research question. We use the same dataset as the for the first research question: the kickstarter dataset. Besides a score for innovation, which we will discuss later, we used the following variables:
- The number of projects that preceded this one (for the same entrepreneur). We made this both a number and a factor, to account for a decreasing effect as the number of observations decreased;
- The number of dollars that the project aimed to achieve;
- The duration of the project;
- The success of the preceding project, which we defined as the number of dollars that project received divided by the number of dollars it aimed to achieve;
- The category of the project (which is similar to the industry of the project) as control variables.
Because of the pareto distribution that is generally considered to be present in income, we took the log values of the number of dollars that projects aimed to achieve and achieved [@pareto].

```{r}
# Install and load required packages
# install.packages(c("tidytext", "dplyr", "ggplot2"))
library(tidytext)
library(dplyr)
library(ggplot2)

#inspect the data
info_filename <- file.choose()
info <- readRDS(info_filename)

#create a dataset with only creator_slug that appear more than once in the dataset
dataHyp2Double <- info[info$creator_slug %in% names(which(table(info$creator_slug) > 1)),]

dataHyp2sub<- dataHyp2Double[,c('creator_slug','Goal_USD','Pledge_USD','Launched_at','Deadline','Project_description','Creator_nb_projects','Creator_nb_backed', 'Category')]

dataHyp2filtered <- na.omit(dataHyp2sub)

#make a subdataset where deadline is before week 32 in 2019 in unix time
dataHyp2 <- dataHyp2filtered[dataHyp2filtered$Deadline < 1565474400,]


#make a new column with boolean if goal_USD >= Pledge_USD
dataHyp2$Pledge_USD <- log(as.numeric(dataHyp2$Pledge_USD) + 1)
dataHyp2$Goal_USD <- log(as.numeric(dataHyp2$Goal_USD) + 1)
dataHyp2$success_rate <- dataHyp2$Pledge_USD / dataHyp2$Goal_USD

dataHyp2 <- subset(dataHyp2, is.finite(dataHyp2$Pledge_USD) & is.finite(dataHyp2$Goal_USD) & is.finite(dataHyp2$success_rate))

# make a new column with order which orders the projects per creator_slug based on launched_at.
# So the first project of a creator should get 1, the second 2 ..
dataHyp2 <- dataHyp2 %>%
  arrange(Launched_at) %>%
  group_by(creator_slug) %>%
  mutate(Order = row_number())

dataHyp2$duration <- as.numeric(dataHyp2$Deadline) - as.numeric(dataHyp2$Launched_at)

dataHyp2$orderFactor <- as.factor(dataHyp2$Order)

dataHyp2 <- dataHyp2 %>%
  arrange(creator_slug, Order) %>%  # Sort the dataframe by 'id' and 'order'
  group_by(creator_slug) %>%
  mutate(previousSuccess = lag(success_rate, default = 1))
```

### Defining innovation, research question 2
Since our dependent variable is innovation, we need to have a measure for innovation. We got our measure for innovation from the description of the project. Using a CAT scanner for innovation, which is a corpus of scientifically verified innovation-related words, we gave an innovation metric to the description, which became the innovation metric for the entire project [@McKenny2018]. We used the existence of these words as the measure, and more of these words means a higher measure.

```{r}
word_dict <- c( "ad lib", "adroit", "adroitness", "bright idea", "clever", "cleverness", "conceive", "concoct", "concoction", "concoctive", "conjure up", "creative", "creativity", "develop", "developed", "dream", "dream up", "expert", "formulation", "freethinker", "genesis", "genius", "gifted", "hit upon", "imagination", "imaginative", "improvise", "ingenious", "ingenuity", "innovate", "innovated", "innovates", "innovating", "innovation", "innovations", "innovative", "innovativeness", "introduced", "introducing", "introduction", "introductions", "invent", "invented", "invention", "inventive", "inventiveness", "inventor", "launch", "launched", "launching", "master stroke", "mastermind", "metamorphose", "metamorphosis", "neoteric", "neoterism", "neoterize", "new capabilities", "new capability", "new compounds", "new content", "new core areas", "new course", "new directions", "new family", "new features", "new generation", "new generations", "new idea", "new ideas", "new line of business", "new medicine", "new medicines", "new molecular entities", "new pharmaceuticals", "new platform", "new process", "new processes", "new product", "new products", "new solutions", "new systems", "new technique", "new techniques", "new technologies", "new technology", "new therapies", "new thinking", "new tools", "new treatments", "new ways", "new wrinkle", "new-generation", "new-product", "next generation", "next-generation", "novation", "novel", "novelty", "patent", "patented", "patents", "process development", "product development", "product launch", "product launches", "proprietary", "prototype", "prototyping", "push the envelope", "R&D", "radical", "re-engineering", "reformulated", "refreshed", "reinvent", "re-invent", "reinvented", "reinventing", "reinvention", "reinvents", "released", "renewal", "renewing", "research", "reshape", "reshaped", "reshapes", "reshaping", "resourceful", "resourcefulness", "restyle", "restyling", "revolutionary", "revolutionize", "revolutionized", "roll out", "rolled out", "see things", "technologically advanced", "think up", "trademark", "transform", "transformation", "transformed", "transforming", "visualize")

innovation_ratios <- vector(mode='numeric', length=nrow(dataHyp2))
for (i in 1:nrow(dataHyp2)) {
  innovation_counter <- 0
  for (word in word_dict) {
    innovation_counter <- innovation_counter + stringr::str_count(dataHyp2$Project_description[i], paste("(?i)", word, sep=''))
  }
  innovation_ratios[i] <- innovation_counter/stringr::str_count(dataHyp2$Project_description[i], ' ')
}

dataHyp2$innovation <- innovation_ratios * 1000
```

### Defining linear models, research question 2
The variables mentioned in the section discussing the importing and cleaning of the data discussed the variables that we took into consideration. We investigated the impact on innovation for each of those variables separately (mod0 to mod5), and then added the variables together iteratively. We did not investigate all combinations, because this would take too much effort. We made a couple of models, based on our intuition of relevant parameters. We then plot the models.

```{r}
mod0 <- lm(innovation ~ Order, data=dataHyp2)
mod1 <- lm(innovation ~ orderFactor, data=dataHyp2)
mod2 <- lm(innovation ~ Goal_USD, data=dataHyp2)
mod3 <- lm(innovation ~ duration, data=dataHyp2)
mod4 <- lm(innovation ~ previousSuccess, data=dataHyp2)
mod5 <- lm(innovation ~ Category, data=dataHyp2)

modA <- lm(innovation ~ Order + Goal_USD + duration, data=dataHyp2)
modB <- lm(innovation ~ orderFactor + Goal_USD + duration, data=dataHyp2)
modC <- lm(innovation ~ Order + Goal_USD + duration + previousSuccess, data=dataHyp2)
modD <- lm(innovation ~ orderFactor + Goal_USD + duration + previousSuccess, data=dataHyp2)
modE <- lm(innovation ~ Order + Goal_USD + duration + previousSuccess + previousSuccess * Order, data=dataHyp2)
modF <- lm(innovation ~ orderFactor + Goal_USD + duration + previousSuccess * orderFactor, data=dataHyp2)
modG <- lm(innovation ~ Order + Goal_USD + duration + previousSuccess + previousSuccess * Order + Category, data=dataHyp2)
modH <- lm(innovation ~ orderFactor + Goal_USD + duration + previousSuccess * orderFactor + Category, data=dataHyp2)

texreg::screenreg(list(mod0, mod1, mod2, mod3, mod4, mod5, modA, modB, modC, modD, modE, modF, modG, modH))
texreg::screenreg(list(mod0, mod2, mod3, mod4, modA, modC, modE))
```

### Plotting innovation graphs
Besides fitting a linear model, we also made graphs showing the impact of having multiple projects on the mean innovation and change in innovation compared to having one less project.

```{r}
dataHyp2 <- dataHyp2 %>%
  arrange(creator_slug, Order) %>%  # Sort the dataframe by 'id' and 'order'
  group_by(creator_slug) %>%
  mutate(change = innovation - lag(innovation, default = first(innovation)))

dataHyp2 %>% ggplot(aes(x=factor(Order), y=change)) +
  geom_boxplot() +
  geom_line(stat="summary", fun="mean", aes(group=1, y=innovation), color="red", size=1) +
  labs(title="Change in innovation for number of projects",
       x="Number of projects",
       y="Change in innovation compared to time-1")

ggplot(dataHyp2, aes(x = Order, y = change)) +
  geom_bar(stat = "summary", fun = "mean", position = "dodge") +
  labs(title = "Mean change in innovation for number of projects", x = "Number of projects", y = "Innovation")

dataHyp2 %>% ggplot(aes(x=factor(Order), y=innovation)) +
  geom_boxplot() +
  labs(title="Innovation for number of projects",
       x="Number of projects",
       y="Innovation")

ggplot(dataHyp2, aes(x = Order, y = innovation)) +
  geom_bar(stat = "summary", fun = "mean", position = "dodge") +
  labs(title = "Mean innovation for number of projects", x = "Number of projects", y = "Innovation")
```

## Results

### Hypothesis 1 results

```{r}

dataHyp1
dataHyp1$Creator_nb_projects
tableHyp1$vec_ind

```

Present the results of your analyses including descriptive statistics, regression tables, as well as any possible figures or visualizations that you made, e.g., those of the interaction effects.

### Hypothesis 2 results

#### Linear models
Let us first discuss the results from the linear models. Using a significance level of 0.05, which is justified because we are not dealing with a critical situation, we can see that in all linear models, the number of previous projects (the 'Order' term) has a significant effect on the innovation score of projects. We can also see that this effect is negative. This means that the more projects a creator has done, the less innovative a new project is expected to be. As said in the methods section, we also added the number of previous projects as a factor (the 'orderFactor' term). Without any control variables, we can see that as projects get more previous projects, the innovation score gets lower. However, after adding the control variables, the effect of 'orderFactor' was no longer determined to be significant.

Comparing the models, it stands out that the 'category' term greatly increases the R-squared metric. We also see that a lot of categories significantly differ from the baseline category. We hypothesize that this means that some categories are more more likely to be innovative than others.

#### Plots
Looking at the plots, we are unable to see a clear trend. From our visual interpretations of the plots of the change in innovativeness. In the first plot, the red line seems to show that the number of projects slightly increases the innovation: the projects are - on average - slightly more innovative that the previous one, for the same entrepreneur. However, the effect seems to be very small, and there are lots of projects that are a lot less innovative than the previous ones for the same entrepreneur.

From the plots showing the mean innovation score for every project, we can see that as entrepreneurs have more previous projects, the projects become less innovative, on average. This seems to be in contrast with the first plots, showing the change in innovation. This could be explained by the fact that innovative products are more difficult to produce and thus take longer. This would mean that people that make more innovative products are not able to do as many projects. This also implies that projects with a lot of previous projects only occur when the entrepreneur does not do innovative projects (because they simply take too long to complete).

#### Justification of the results
We hypothesized that people with more previous projects, would be more innovative that people with fewer previous projects. However, we found the opposite effect. This could be due to the fact that people with lots of previous projects may be entrenched in their communities. This could make them behave as 'imitative entrepreneurs' [@CLIFF2006633].

As we said in the previous section, the effect can also be explained by the fact that projects with more previous projects can only be done by entrepreneurs that are less innovative. So this would mean that an increase in the number of projects is not the cause of an increase in innovativeness, but that an increase in number of projects is only possible for entrepreneurs that are not as innovative: instead of describing the effect of the number of projects, we described a feature of the data.

#### Plots

## Discussion
What did we learn from what you found in your results, how do those findings relate to the ongoing debate in literature, and what can practitioners learn from that?

### Limitations
- Doing an innovative project may take more time to complete (the campaigns may be equally long, but building the product may take longer). This means that entrepreneurs that are more likely to do innovative projects will have done fewer projects in total. This means that projects with a lot of previous projects are almost all not innovative. This creates biases in our dataset.
- There are only few entrepreneurs with over 20 projects. This may mean that the results for higher numbers of previous projects are not representative.

## Conclusion (?)

The description did not say a conclusion was needed, but I think it is a good idea to have one.

## References

the bib.tex file can go here. I have not yet added any references, but as we write they will be added.
